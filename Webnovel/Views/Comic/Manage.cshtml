@model Webnovel.Entities.Comic

@{
    ViewData["Title"] = "Manage Comic";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}


<div class="row">
    <div class="col-lg-12">
        <div class="page-breadcrumb">
            <h4 class="page-title">Manage Episode and Scence</h4>
            <div class="row m-t-5">
                <div class="col-6">
                    <button onclick="showAddScene()" class="btn btn-outline-orange"><i class="ti ti-plus"></i> Create Scene</button>

                </div>
                <div class="col-6">
                    <button onclick="showAddEpisode()" style="float: right" class="btn btn-outline-primary"><i class="ti ti-plus"></i> Create Episode</button>

                </div>

            </div>

        </div>
    </div>
</div>


<div class="left-part bg-white p-b-40">
    <!-- Mobile toggle button -->
    <a class="ti-menu ti-close btn btn-success show-left-part d-block d-md-none" href="javascript:void(0)"></a>
    <!-- Mobile toggle button -->
    <div class="scrollable position-relative ps-container ps-theme-default" style="height:100%;" data-ps-id="bfdfe7c7-2f7f-9f54-d173-ff3f0606991b">
        <div class="p-15" id="sections">
            @await Component.InvokeAsync("SceneList", new { comicId = Model.Id })
        </div>
        <div class="ps-scrollbar-x-rail" style="left: 0px; bottom: 0px;">

            <div class="ps-scrollbar-x" tabindex="0" style="left: 0px; width: 0px;"></div>
        </div><div class="ps-scrollbar-y-rail" style="top: 0px; right: 3px;"><div class="ps-scrollbar-y" tabindex="0" style="top: 0px; height: 0px;"></div></div>
    </div>
</div>

<div class="right-part">
    <div class="p-20" id="display">


    </div>

</div>

<div class="modal fade" id="createSectionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-megna">
                <h4 class="modal-title" id="exampleModalLabel1">Add Scene to @Model.Title</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                @await Component.InvokeAsync("AddScene", new { comicId = Model.Id })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" aria-label="Close">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createChapterModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-megna">
                <h4 class="modal-title" id="exampleModalLabel1">Add Episode to @Model.Title</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                @await Component.InvokeAsync("AddEpisode", new { comicId = Model.Id })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" aria-label="Close">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section css{
    <link href="~/admin/assets/libs/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.12/summernote.css" rel="stylesheet">
    <link type="text/css" href="https://uicdn.toast.com/tui-color-picker/v2.2.3/tui-color-picker.css" rel="stylesheet">
    <link href="~/comic-editor/dist/tui-image-editor.css" rel="stylesheet" /> 
    <style>
        a.delete-section {
            text-align: right;
            color: #bfbfbf;
            float: right;
            font-size: 0.9rem;
        }

        li.list-group-item {
            padding: 3px;
            margin-bottom: 2px;
            background-color: #d0f3f9;
            cursor: pointer;
        }
    </style>
}

@section Scripts
{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.12/summernote.js"></script>

    <script src="~/admin/assets/libs/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <script src="~/js/doFormPost.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/3.3.2/fabric.js"></script>
    <script type="text/javascript" src="https://uicdn.toast.com/tui.code-snippet/v1.5.0/tui-code-snippet.min.js"></script>
    <script type="text/javascript" src="https://uicdn.toast.com/tui-color-picker/v2.2.3/tui-color-picker.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.3/FileSaver.min.js"></script>
    <script src="~/comic-editor/dist/tui-image-editor.js"></script>
    <script type="text/javascript" src="~/comic-editor/dist/js/theme/white-theme.js"></script>
    <script type="text/javascript" src="~/comic-editor/dist/js/theme/black-theme.js"></script>
    <script>
        function showAddScene() {
            $("#createSectionModal").modal();
        }

        function showAddEpisode() {
            $("#createChapterModal").modal();
        }

        function showEpisode(epicId) {


            $("#display").load("/Comic/DisplayEpisode/" + epicId,
                function ()
                {
                    //var imageEditor = new tui.ImageEditor('.img-div',
                    //    {
                    //        includeUI: {
                    //            loadImage: {
                    //                path: $("#myImage").attr("src"),
                    //                name: $("#myImage").attr("title")
                    //            },
                    //            theme: blackTheme, // or whiteTheme
                    //            initMenu: 'filter',
                    //            menuBarPosition: 'bottom',
                    //            uiSize: {  height: 1000 }
                    //        },

                    //        cssMaxWidth: 700,
                    //        cssMaxHeight: 500,
                    //        usageStatistics: false
                    //    });

                    //window.onresize = function() {
                    //    imageEditor.ui.resizeEditor({
                    //        uiSize: {  height: 1000 }
                    //    });
                    //}
                });

        }

        function beginUpload(episodeId) {

            var img = $("#uploadedFileData").val();
            if (img == "") {
                swal("Please Select a Picture to continue");
            } else {
                $.ajax('/Comic/ChangePicture/',
                    {
                        type: "Post",
                        data: {
                            "episodeId": episodeId,
                            "imgData": img
                        },
                        beforeSend: function() {
                            $("#loadingImg").show();
                        },
                        complete: function() {
                            $("#loadingImg").hide();
                        },
                        success: function(response) {
                            Swal.fire({
                                title: 'Success',
                                text: response.message,
                                type: 'success',
                                confirmButtonText: 'Ok'
                            });
                            $("#display").load("/Comic/DisplayEpisode/" + episodeId);
                        },
                        error: function(err) {
                            console.log(err);
                        }


                    });
            }
        }


    </script>

    <script>
        var $uploadCrop,
            tempFilename,
            rawImg,
            imageId;

        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    //$('.upload-demo').addClass('ready');
                    //$('#cropImagePop').modal('show');
                    rawImg = e.target.result;

                    $('#myImage').attr('src', rawImg);
                    $('#uploadedFileData').val(rawImg);

                }
                reader.readAsDataURL(input.files[0]);
            } else {
                swal("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        $(function() {
            $(document.body).on('change',
                '#UploadFileControl',
                function() {
                    imageId = $(this).data('id');
                    tempFilename = $(this).val();
                    //$('#cancelCropBtn').data('id', imageId);
                    readFile(this);
                });

        });

    </script>
}

