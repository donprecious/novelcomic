@using Webnovel.Repository
@model Webnovel.Models.CategoryVm
@inject ICategory Category
@{
    ViewData["Title"] = "AddCategory";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-content">
    <div class="container-fluid">
        <!-- Page-Title -->
        <div class="row">
            <div class="col-sm-12">
                <div class="page-title-box">
                    <div class="float-right">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="javascript:void(0);">Categories</a>
                            </li>

                        </ol>
                    </div>

                </div><!--end page-title-box-->
            </div><!--end col-->
        </div><!--end row--><!-- end page title end breadcrumb -->


        <div class="row">
            <div class="col-md-12">
                <div class="card card-body">
                    <h4 class="card-title">Add Categories</h4>
  
                    <form class="form-horizontal m-t-30" method="post" asp-action="AddCategory">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(a=>a.Id)
                        <div class="form-group">
                            <label>Name <span class="help"> e.g. "Comedy"</span></label>
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <input asp-for="Name"  type="text" class="form-control" >
                        </div>
                        <div class="form-group">
                            <label>Description <span class="help"> </span></label>
                            <textarea asp-for="Description"  type="text" class="form-control" > </textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </form>
                </div>
            </div>
    
            <div class="col-md-12">
                <div class="card card-body">
                    <h4 class="card-title">Categories</h4>
                    @await Component.InvokeAsync("Category")

                </div>
            </div>
        </div>
    </div><!-- container -->

</div>




